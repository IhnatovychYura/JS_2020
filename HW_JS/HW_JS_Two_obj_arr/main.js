console.log(22);
console.log("Task 1 ______________________________________________________________");
// --створити масив та вивести його в консоль:
// - з 5 числових значень
// - з 5 стічкових значень
// - з 5 значень стрічкового, числового та булевого типу

let tel = [
    322383361,
    380503174644,
    380936242461,
    380505116696,
    380957287828,
];

let names = [
    "Yura",
    "Borus",
    "Ivan",
    "Petro",
    "Oksana",
];

let mix = [
    32, "Yura", true, 96, "Borus"
];

console.log(tel, names, mix);

// -- Створити пустий масив. Наповнити його будь-якими значеннями звертаючись до конкретного індексу. Вивести в консоль
console.log("Task 2 ______________________________________________________________");

let arr = [];

arr[0] = "Yura";
arr[1] = 25;
arr[2] = true;
arr[3] = "BMW";
arr[4] = 1995;

console.log(arr);

console.log("Task 3 ______________________________________________________________");
// - За допомогою циклу for і document.write() вивести 10 блоків div c довільним текстом всередині

for (let i = 0; i < 10; i++) {
    document.write("<div>DIV</div>");
}

console.log("Task 4 ______________________________________________________________");
// - За допомогою циклу for і document.write() вивести 10 блоків div c довільним текстом і індексом всередині

for (let i = 0; i < 10; i++) {
    document.write("<div>DIV " + i + "</div>")
}

console.log("Task 5 ______________________________________________________________");
// - За допомогою циклу while вивести в документ 20 блоків h1 c довільним текстом всередині.
let i = 0
while (i < 20) {
    document.write("<h1>TEG H1</h1>");
    i++;
}

console.log("Task 6 ______________________________________________________________");
// - За допомогою циклу while вивести в документ 20 блоків h1 c довільним текстом і індексом всередині.

let a = 0;
while (a < 20) {
    document.write("<h1 class='a'>TEG H1 " + a + "</h1>");
    a++;
}

console.log("Task 7 ______________________________________________________________");
// - Створити масив з 10 числових елементів. Вивести в консоль всі його елементи в циклі.
let arr2 = [
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
];

for (let i = 0; i < arr2.length; i++) {
    console.log(arr2[i]);
}

console.log("Task 8 ______________________________________________________________");
// - Створити масив з 10 строкрових елементів. Вивести в консоль всі його елементи в циклі.

let arr3 = [
    "one",
    "two",
    "three",
    "four",
    "five",
    "six",
    "seven",
    "eight",
    "nine",
    "ten",
];

for (let i = 0; i < arr3.length; i++) {
    console.log(arr3[i]);
}

console.log("Task 9 ______________________________________________________________");
// - Створити масив з 10 елементів будь-якого типу. Вивести в консоль всі його елементи в циклі.

let arr4 = [
    1,
    "two",
    true,
    "four",
    "5",
    6,
    false,
    "eight",
    9,
    false,
];

for (let i = 0; i < arr4.length; i++) {
    console.log(arr4[i]);
}

console.log("Task 10 ______________________________________________________________");
// - Створити масив з 10 елементів числового, стірчкового і булевого типу. За допомогою if та typeof вивести тільки булеві елементи

for (let i = 0; i < arr4.length; i++) {
    if (typeof arr4[i] == 'boolean') {
        console.log(arr4[i])
    }
}

console.log("Task 11 ______________________________________________________________");
// - Створити масив з 10 елементів числового, стірчкового і булевого типу. За допомогою if та typeof вивести тільки числові елементи

for (let i = 0; i < arr4.length; i++) {
    if (typeof arr4[i] == 'number') {
        console.log(arr4[i])
    }
}

console.log("Task 12 ______________________________________________________________");
// - Створити масив з 10 елементів числового, стрічкового і булевого типу. За допомогою if та typeof вивести тільки рядкові елементи

for (let i = 0; i < arr4.length; i++) {
    if (typeof arr4[i] == 'string') {
        console.log(arr4[i])
    }
}
console.log("Task 13 ______________________________________________________________");
// - Створити порожній масив. Наповнити його 10 елементами (різними за типами) через звернення до конкретних індексів. Вивести в консоль всі його елементи в циклі.

arr[5] = "work";
arr[6] = 3;
arr[7] = false;
arr[8] = "car";
arr[9] = 1998;

for (let i = 0; i < arr.length; i++) {
    console.log(arr[i]);
}

console.log("Task 14 ______________________________________________________________");
// - Створити цикл for на 10  ітерацій з кроком 1. Вивести поточний номер кроку через console.log та document.write

for (let i = 0; i < arr.length; i = i + 2) {
    console.log(arr[i]);
    document.write(arr[i] + " ");
}

console.log("Task 15 ______________________________________________________________");
// - Створити цикл for на 100 ітерацій з кроком 1. Вивести поточний номер кроку через console.log та document.write

document.write("</br>");
for (let i = 0; i < 100; i = i + 2) {
    console.log(i);
    document.write(i + " ");
}

console.log("Task 16 ______________________________________________________________");
// - Створити цикл for на 100 ітерацій з кроком 2. Вивести поточний номер кроку через console.log та document.write

    document.write("</br>");
for (let i = 0; i < 100; i = i + 3) {
    console.log(i);
    document.write(i + " ");
}

console.log("Task 17 ______________________________________________________________");
// - Створити цикл for на 100 ітерацій. Вивести тільки парні кроки. через console.log + document.write

document.write("</br>");
for (let i = 0; i < 100; i+=2) {
    console.log(i);
    document.write(i + " ");
}

console.log("Task 18 ______________________________________________________________");
// - Створити цикл for на 100 ітерацій. Вивести тільки парні кроки. через console.log + document.write

// Те саме

console.log("Task 19 ______________________________________________________________");
// - Створити цикл for на 100 ітерацій. Вивести тільки непарні кроки. через console.log + document.write

document.write("</br>");
for (let i = 1; i < 100; i+=2) {
    console.log(i);
    document.write(i + " ");
}

console.log("Task 20 ______________________________________________________________");
// - Відтворити роботу годинника, відрахувавши 2 хвилини (2 цикли! 1й - хвилини, 2й - секунди)

for (let min = 0; min < 2; min++) {
        for (let sec = 0; sec < 60; sec++){
            console.log(min + ":" + sec)
        }
    }

console.log("Task 21 ______________________________________________________________");
// - Відтворити роботу годинника, відрахувавши  2 години 20 хвилини (3 цикли! 1й - години, 2й - хвилини, 3й - секунди)

// for (let h = 0; h < 3; h++){
//     for (let min = 0; min < 60; min++) {
//         if (h === 2 && min === 20){
//             break;
//         } else {
//             for (let sec = 0; sec < 60; sec++){
//                 console.log(h + ":" + min + ":" + sec)
//             }
//         }
//     }
// }

// __________________________ ДОДАТКОВО ____________________________________________
console.log("Task 22 ______________________________________________________________");
// - Дано масив: [ 'a', 'b', 'c'] . За допомогою циклу for зібрати всі букви в слово.

let arr5 = [ 'a', 'b', 'c'];

let result = "" ;
for (let i = 0; i < arr5.length; i++) {
    result = result + arr5[i];
}
    console.log(result);

console.log("Task 23 ______________________________________________________________");
// - Дано масив: [ 'a', 'b', 'c'] . За допомогою циклу while зібрати всі букви в слово.

let result2 = "";
let b = 0;

while (b < arr5.length) {
    result2 = result2 + arr5[b];
    b++
}
console.log(result2);

console.log("Task 24 ______________________________________________________________");
// - Дано масив: [ 'a', 'b', 'c'] . За допомогою циклу for of зібрати всі букви в слово.

let word = ""
for (let element of arr5){
    word += element;
}
    console.log(word);

console.log("Task 25 ______________________________________________________________");
// - Дано масив: [ 'a', 'b', 'c'] . За допомогою циклу for of зібрати всі букви в слово.
// THE SAME AS TASK 24























